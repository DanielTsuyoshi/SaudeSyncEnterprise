// <auto-generated />
using System;
using SaudeSync.Persistense;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace SaudeSync.Migrations
{
    [DbContext(typeof(PostgreDbContext))]
    partial class CustomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SaudeSync.Entities.CustomConsulta", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .HasColumnName("custom_id");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<long>("ConsultorioId")
                    .HasColumnType("bigint")
                    .HasColumnName("custom_consultorio_id");

                b.Property<DateTime>("DataHora")
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("custom_data_consulta");

                b.Property<long>("MedicoId")
                    .HasColumnType("bigint")
                    .HasColumnName("custom_medico_id");

                b.Property<int>("UsuarioId")
                    .HasColumnType("integer")
                    .HasColumnName("custom_usuario_id");

                b.HasKey("Id");

                b.HasIndex("ConsultorioId");

                b.HasIndex("MedicoId");

                b.HasIndex("UsuarioId");

                b.ToTable("CustomConsultas");
            });

            modelBuilder.Entity("SaudeSync.Entities.CustomConsultorio", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .HasColumnName("custom_id");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<string>("Cnpj")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("custom_cnpj_consultorio");

                b.Property<long?>("EnderecoId")
                    .IsRequired()
                    .HasColumnType("bigint")
                    .HasColumnName("custom_id_endereco");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("character varying(100)")
                    .HasColumnName("custom_nome_consultorio");

                b.HasKey("Id");

                b.HasIndex("EnderecoId");

                b.ToTable("CustomConsultorios");
            });

            modelBuilder.Entity("SaudeSync.Entities.CustomEndereco", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .HasColumnName("custom_id");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<string>("Cep")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("custom_cep");

                b.Property<string>("Cidade")
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasColumnType("character varying(40)")
                    .HasColumnName("custom_cidade");

                b.Property<string>("Complemento")
                    .HasMaxLength(40)
                    .HasColumnType("character varying(40)")
                    .HasColumnName("custom_complemento");

                b.Property<long?>("ConsultorioId")
                    .HasColumnType("bigint")
                    .HasColumnName("custom_id_consultorio");

                b.Property<string>("Estado")
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasColumnType("character varying(40)")
                    .HasColumnName("custom_estado");

                b.Property<string>("Logradouro")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("character varying(100)")
                    .HasColumnName("custom_logradouro");

                b.Property<int>("Numero")
                    .HasColumnType("integer")
                    .HasColumnName("custom_numero");

                b.HasKey("Id");

                b.HasIndex("ConsultorioId");

                b.ToTable("CustomEnderecos");
            });

            modelBuilder.Entity("SaudeSync.Entities.CustomMedico", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .HasColumnName("custom_id");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<string>("Crm")
                    .IsRequired()
                    .HasMaxLength(13)
                    .HasColumnType("character varying(13)")
                    .HasColumnName("custom_crm_medico");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(256)
                    .HasColumnType("character varying(256)")
                    .HasColumnName("custom_email_medico");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("character varying(100)")
                    .HasColumnName("custom_nome_medico");

                b.HasKey("Id");

                b.ToTable("CustomMedicos");
            });

            modelBuilder.Entity("SaudeSync.Entities.CustomUsuario", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasColumnName("custom_id");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("Cpf")
                    .IsRequired()
                    .HasMaxLength(11)
                    .HasColumnType("character varying(11)")
                    .HasColumnName("custom_cpf_usuario");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(256)
                    .HasColumnType("character varying(256)")
                    .HasColumnName("custom_email_usuario");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("character varying(100)")
                    .HasColumnName("custom_nome_usuario");

                b.Property<string>("Senha")
                    .IsRequired()
                    .HasMaxLength(60)
                    .HasColumnType("character varying(60)")
                    .HasColumnName("custom_senha_usuario");

                b.HasKey("Id");

                b.ToTable("CustomUsuarios");
            });

            modelBuilder.Entity("SaudeSync.Entities.CustomConsulta", b =>
            {
                b.HasOne("SaudeSync.Entities.CustomConsultorio", "Consultorio")
                    .WithMany("Consultas")
                    .HasForeignKey("ConsultorioId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("SaudeSync.Entities.CustomMedico", "Medico")
                    .WithMany("Consultas")
                    .HasForeignKey("MedicoId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("SaudeSync.Entities.CustomUsuario", "Usuario")
                    .WithMany("Consultas")
                    .HasForeignKey("UsuarioId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Consultorio");

                b.Navigation("Medico");

                b.Navigation("Usuario");
            });

            modelBuilder.Entity("SaudeSync.Entities.CustomConsultorio", b =>
            {
                b.HasOne("SaudeSync.Entities.CustomEndereco", "Endereco")
                    .WithMany()
                    .HasForeignKey("EnderecoId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Endereco");
            });

            modelBuilder.Entity("SaudeSync.Entities.CustomEndereco", b =>
            {
                b.HasOne("SaudeSync.Entities.CustomConsultorio", "Consultorio")
                    .WithMany()
                    .HasForeignKey("ConsultorioId");

                b.Navigation("Consultorio");
            });

            modelBuilder.Entity("SaudeSync.Entities.CustomImagem", b =>
            {
                b.HasOne("SaudeSync.Entities.CustomUsuario", "Usuario")
                    .WithMany()
                    .HasForeignKey("UsuarioId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Usuario");
            });

            modelBuilder.Entity("SaudeSync.Entities.CustomConsultorio", b =>
            {
                b.Navigation("Consultas");
            });

            modelBuilder.Entity("SaudeSync.Entities.CustomMedico", b =>
            {
                b.Navigation("Consultas");
            });

            modelBuilder.Entity("SaudeSync.Entities.CustomUsuario", b =>
            {
                b.Navigation("Consultas");
            });
#pragma warning restore 612, 618
        }
    }
}
